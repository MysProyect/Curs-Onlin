Entrada de rebote
		De forma predeterminada, Livewire aplica un rebote de 150 ms a las entradas de texto. Esto evita que se envíen demasiadas solicitudes de red a medida que un usuario escribe en un campo de texto.
		Si desea anular este valor predeterminado (o agregarlo a una entrada que no sea de texto), Livewire ofrece un modificador "antirrebote". Si desea aplicar un antirrebote de medio segundo a una entrada, debe incluir el modificador así:

		wire:model.debounce.500ms="name"

Actualización perezosa
		De forma predeterminada, Livewire envía una solicitud al servidor después de cada evento de entrada (o cambio en algunos casos). Esto suele estar bien para elementos como <select> que normalmente no activan actualizaciones rápidas, sin embargo, esto a menudo es innecesario para campos de texto que se actualizan a medida que el usuario escribe.

		<input type="text" wire:model.lazy="message">
		Ahora, la propiedad $ message solo se actualizará cuando el usuario haga clic fuera del campo de entrada.

Actualización diferida
		En los casos en los que no es necesario que las actualizaciones de datos se realicen en vivo, Livewire tiene un modificador.

		Por ejemplo, dado el siguiente componente:


		<input type="text" wire:model.defer="query">
		<button wire:click="search">Search</button>

		A medida que el usuario escribe en el campo <input>, no se enviarán solicitudes de red. Incluso si el usuario hace clic fuera del campo de entrada y en otros campos de la página, no se enviarán solicitudes.

		Cuando el usuario presiona "Buscar", Livewire enviará UNA solicitud de red que contiene el nuevo estado de "consulta" Y la acción de "búsqueda" a realizar.

		Esto puede reducir drásticamente el uso de la red cuando no es necesario.

